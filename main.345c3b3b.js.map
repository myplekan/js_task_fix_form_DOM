{"version":3,"sources":["scripts/main.js"],"names":["parentElem","document","querySelectorAll","fieldLabel","createElement","input","separateWord","word","upper","slice","toUpperCase","i","length","forEach","elem","placeholder","name","className","append","cloneNode","lastElementChild","htmlFor","firstElementChild","id","textContent"],"mappings":";AAAA,aA+BC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA7BD,IAAMA,EAAaC,SAASC,iBAAiB,UACvCC,EAAaF,SAASG,cAAc,SACpCC,EAAQJ,SAASC,iBAAiB,SAiBxC,SAASI,EAAaC,GAGf,IAFCC,IAAAA,EAAQD,EAAKE,MAAM,EAAG,GAAGC,cAEtBC,EAAI,EAAGA,EAAIJ,EAAKK,OAAQD,IAC3BJ,GAAAA,EAAKI,KAAOJ,EAAKI,GAAGD,cACfF,OAAAA,EAAQD,EAAKE,MAAM,EAAG,CAACE,IAAM,IAAMJ,EAAKE,MAAME,EAAGJ,EAAKK,QAI1DJ,OAAAA,EAAQD,EAAKE,MAAM,EAAGF,EAAKK,QAxBpC,EAAIP,GAAOQ,QAAQ,SAAAC,GACjBA,EAAKC,YAAcT,EAAaQ,EAAKE,MAAMN,gBAG7CP,EAAWc,UAAY,cAEvB,EAAIjB,GAAYa,QAAQ,SAAAC,GACtBA,EAAKI,OAAOf,EAAWgB,WAAU,MAGnC,EAAInB,GAAYa,QAAQ,SAAAC,GACtBA,EAAKM,iBAAiBC,QAAUP,EAAKQ,kBAAkBC,GACvDT,EAAKM,iBAAiBI,YAAclB,EAAaQ,EAAKQ,kBAAkBN","file":"main.345c3b3b.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst parentElem = document.querySelectorAll('.field');\nconst fieldLabel = document.createElement('label');\nconst input = document.querySelectorAll('input');\n\n[...input].forEach(elem => {\n  elem.placeholder = separateWord(elem.name).toUpperCase();\n});\n\nfieldLabel.className = 'field-label';\n\n[...parentElem].forEach(elem => {\n  elem.append(fieldLabel.cloneNode(true));\n});\n\n[...parentElem].forEach(elem => {\n  elem.lastElementChild.htmlFor = elem.firstElementChild.id;\n  elem.lastElementChild.textContent = separateWord(elem.firstElementChild.name);\n});\n\nfunction separateWord(word) {\n  const upper = word.slice(0, 1).toUpperCase();\n\n  for (let i = 0; i < word.length; i++) {\n    if (word[i] === word[i].toUpperCase()) {\n      return upper + word.slice(1, [i]) + ' ' + word.slice(i, word.length);\n    }\n  }\n\n  return upper + word.slice(1, word.length);\n}\n"]}